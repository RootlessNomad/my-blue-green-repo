name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
      - test
      

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1    # cluster name
  GKE_ZONE: us-central1   # cluster zone
  #IMAGE: mi-image # image name
  #IMAGE_TAG: latest # image tag
  GAR_ZONE: us-central1 # artifact registry zone
  GAR_REPO: my-docker-repo # artifact registry repository

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - name: Docker configuration
      run: |-
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Build and Push the Docker Image
    - name: Build and Push Docker Image
      run: |
        BRANCH_NAME=$(echo "${GITHUB_REF##*/}" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '-')
        IMAGE_TAG="us-central1-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/${BRANCH_NAME}-app:latest"
        echo "Building image: $IMAGE_TAG"
        docker build --platform linux/amd64 -t $IMAGE_TAG .
        docker push $IMAGE_TAG
        
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        gcloud container clusters get-credentials \$GKE_CLUSTER --zone \$GKE_ZONE --project \$PROJECT_ID
        kubectl set image deployment/\${GITHUB_REF##*/}-app \${GITHUB_REF##*/}-app=\$IMAGE_TAG
